import os
from flask import Flask, request, abort
import requests
import json

#LINE bot 必要套件
from linebot import (
    LineBotApi, WebhookHandler
)
from linebot.exceptions import (
    InvalidSignatureError
)
from linebot.models import (
    MessageEvent, TextMessage, TextSendMessage,ImageMessage,ImageSendMessage
)

app = Flask(__name__)

# Channel Access Token
line_bot_api = LineBotApi("nyA3ivbEmdmnMYoRzBTltzZydNIvJK9lz5dipv5bfr8hUkzbkdOMMgVB0/e3ApNPz2FFQUe4nQE9obc8pC0Sl9IinHIjbYKqDWUNI0/2TceCTayhF5cq0yWZ0h8b33vX1zbRlJ2JnpQiqrqnwafdNwdB04t89/1O/w1cDnyilFU=")

# Channel Secret
handler = WebhookHandler("d68c8da9786247011611671d59b56d66")


def GetAQI(station):    
    url='https://data.epa.gov.tw/api/v1/aqx_p_432?limit=1000&api_key=9be7b239-557b-4c10-9775-78cadfc555e9&format=json'
    data=requests.get(url).json()
    data=data["records"]
    for i in data:
        if i['SiteName']==str(station):
            AQIdata = i
            msG="AQI報告 - " + AQIdata['SiteName']
            msG+="\n\nAQI = " +AQIdata["AQI"]
            msG+="\nPM2.5 = " +AQIdata["PM2.5"]
            msG+="\nPM10 = " +AQIdata["PM10"]
            msG+="\nO3 = " +AQIdata["O3"]
            msG+="\n空氣品質 = " +AQIdata["Status"]
            msG+="\n風速 = " +AQIdata["WindSpeed"]
            msG+="\n時間 : " +AQIdata["PublishTime"]            
    return msG





def GetWeather(station):
    end_point = "https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0001-001?Authorization=rdec-key-123-45678-011121314"

    data = requests.get(end_point).json()
    data = data["records"]["location"]

    target_station = "not found"
    for item in data:
        if item["locationName"] == str(station):
            target_station = item
    return target_station

def MakeWeather(station):
    WeatherData = GetWeather(station)
    if WeatherData == "not found":
        msg='請輸入觀測站名'
        return msg

    WeatherData = WeatherData["weatherElement"]
    msg = "天氣報告 - " + station
    msg += "\n\n氣溫 = " + WeatherData[3]["elementValue"] + "℃\n"
    msg += "濕度 = " + \
        str(float(WeatherData[4]["elementValue"]) * 100) + "% RH\n"
    return msg



def MakeRailFall(station):
    result = requests.get(
        "https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0002-001?Authorization=rdec-key-123-45678-011121314")
    msg = "天氣報告 - " + station + "\n\n"

    if(result.status_code != 200):
        return "雨量資料讀取失敗"
    else:
        railFallData = result.json()
        for item in railFallData["records"]["location"]:
            if station in item["locationName"]:
                msg += "目前雨量：" + \
                    item["weatherElement"][7]["elementValue"] + "mm\n"
                if item["weatherElement"][3]["elementValue"] == "-998.00":
                    msg += "三小時雨量：0.00mm\n"
                else:
                    msg += "三小時雨量：" + \
                        item["weatherElement"][3]["elementValue"] + "mm\n"
                msg += "日雨量：" + \
                    item["weatherElement"][6]["elementValue"] + "mm\n"
                return msg
        return "地區錯誤"

def massage():
    mas="請輸入功能 地區(AQI、雨量、氣溫)\n例:AQI 基隆"
    return mas

@app.route("/callback", methods=['POST'])
def callback():
    # get X-Line-Signature header value
    signature = request.headers['X-Line-Signature']

    # get request body as text
    body = request.get_data(as_text=True)
    app.logger.info("Request body: " + body)

    # handle webhook body
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)

    return 'OK'


@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):        
    cmd = event.message.text.split(" ")
    
    if cmd[0] == "AQI":
        station = cmd[1]
        AQIMsg = GetAQI(station)
        if not AQIMsg:
            AQIMsg = "地區錯誤"

        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text=AQIMsg))
        
    if cmd[0] == "雨量":
        station = cmd[1]
        RailFallMsg = MakeRailFall(station)

        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text=RailFallMsg))
    if cmd[0] == "氣溫":
        station = cmd[1]
        WeatherMsg  = MakeWeather(station)

        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text=WeatherMsg))

if __name__ == "__main__":
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
